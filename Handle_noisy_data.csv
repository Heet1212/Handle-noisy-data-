# import csv 

# # Simulate noisy input (you can also read from a file)
# raw_data = """
# 101,heet





# shah

# 102,meet,patel
# """


# lines = raw_data.strip().splitlines()
# print(lines)
# records = []
# temp = []

# for i,line in enumerate(lines):
#     print(i,line)
#     line = line.strip()
#     if not line:
#         continue  
#     parts = [p.strip() for p in line.split(',') if p.strip()]
    

#     temp.extend(parts)

    
#     print("temp",temp)
#     if temp and temp[0].isdigit() and len(temp) >= 2:
#         id_part = temp[0]
#         name_parts = temp[1:]
#         name = ' '.join(name_parts).title()
#         records.append([id_part, name])
#         temp = []

# # Step 3: Save to CSV
# with open("cleaned_output.csv", "w", newline='') as f:
#     writer = csv.writer(f)
#     writer.writerows(records)

# print("âœ… Cleaned CSV written successfully.")






import csv

raw_data = """
101,heet





shah

102,meet,patel
"""


# Step 1: Clean up and split lines
lines = [line.strip() for line in raw_data.splitlines() if line.strip()]

records = []
temp = []

for i, line in enumerate(lines):
    parts = [p.strip() for p in line.split(',') if p.strip()]

    # If line starts a new record (i.e., starts with a digit), and we already have something in temp
    if parts and parts[0].isdigit() and temp:
        # Save the previous record
        id_part = temp[0]
        name = ' '.join(temp[1:]).title()
        records.append([id_part, name])
        temp = parts  # start new record
    else:
        temp.extend(parts)


if temp and temp[0].isdigit() and len(temp) > 1:
    id_part = temp[0]
    name = ' '.join(temp[1:]).title()
    records.append([id_part, name])


with open("cleaned_output.csv", "w", newline="") as f:
    writer = csv.writer(f)
    writer.writerows(records)

